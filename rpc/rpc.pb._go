// Code generated by protoc-gen-go.
// source: rpc.proto
// DO NOT EDIT!

/*
Package rpc is a generated protocol buffer package.

It is generated from these files:
	rpc.proto

It has these top-level messages:
	QueryParams
	Row
*/
package rpc

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf "github.com/golang/protobuf/ptypes/timestamp"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type QueryParams struct {
	Sql string `protobuf:"bytes,1,opt,name=sql" json:"sql,omitempty"`
}

func (m *QueryParams) Reset()                    { *m = QueryParams{} }
func (m *QueryParams) String() string            { return proto.CompactTextString(m) }
func (*QueryParams) ProtoMessage()               {}
func (*QueryParams) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type Row struct {
	Ts          *google_protobuf.Timestamp `protobuf:"bytes,1,opt,name=ts" json:"ts,omitempty"`
	Dims        []string                   `protobuf:"bytes,2,rep,name=dims" json:"dims,omitempty"`
	Fields      []float64                  `protobuf:"fixed64,3,rep,packed,name=fields" json:"fields,omitempty"`
	DimLabels   []string                   `protobuf:"bytes,4,rep,name=dimLabels" json:"dimLabels,omitempty"`
	FieldLabels []string                   `protobuf:"bytes,5,rep,name=fieldLabels" json:"fieldLabels,omitempty"`
}

func (m *Row) Reset()                    { *m = Row{} }
func (m *Row) String() string            { return proto.CompactTextString(m) }
func (*Row) ProtoMessage()               {}
func (*Row) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Row) GetTs() *google_protobuf.Timestamp {
	if m != nil {
		return m.Ts
	}
	return nil
}

func init() {
	proto.RegisterType((*QueryParams)(nil), "QueryParams")
	proto.RegisterType((*Row)(nil), "Row")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion3

// Client API for TibsDB service

type TibsDBClient interface {
	Query(ctx context.Context, in *QueryParams, opts ...grpc.CallOption) (TibsDB_QueryClient, error)
}

type tibsDBClient struct {
	cc *grpc.ClientConn
}

func NewTibsDBClient(cc *grpc.ClientConn) TibsDBClient {
	return &tibsDBClient{cc}
}

func (c *tibsDBClient) Query(ctx context.Context, in *QueryParams, opts ...grpc.CallOption) (TibsDB_QueryClient, error) {
	stream, err := grpc.NewClientStream(ctx, &_TibsDB_serviceDesc.Streams[0], c.cc, "/TibsDB/Query", opts...)
	if err != nil {
		return nil, err
	}
	x := &tibsDBQueryClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type TibsDB_QueryClient interface {
	Recv() (*Row, error)
	grpc.ClientStream
}

type tibsDBQueryClient struct {
	grpc.ClientStream
}

func (x *tibsDBQueryClient) Recv() (*Row, error) {
	m := new(Row)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// Server API for TibsDB service

type TibsDBServer interface {
	Query(*QueryParams, TibsDB_QueryServer) error
}

func RegisterTibsDBServer(s *grpc.Server, srv TibsDBServer) {
	s.RegisterService(&_TibsDB_serviceDesc, srv)
}

func _TibsDB_Query_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(QueryParams)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(TibsDBServer).Query(m, &tibsDBQueryServer{stream})
}

type TibsDB_QueryServer interface {
	Send(*Row) error
	grpc.ServerStream
}

type tibsDBQueryServer struct {
	grpc.ServerStream
}

func (x *tibsDBQueryServer) Send(m *Row) error {
	return x.ServerStream.SendMsg(m)
}

var _TibsDB_serviceDesc = grpc.ServiceDesc{
	ServiceName: "TibsDB",
	HandlerType: (*TibsDBServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Query",
			Handler:       _TibsDB_Query_Handler,
			ServerStreams: true,
		},
	},
	Metadata: fileDescriptor0,
}

func init() { proto.RegisterFile("rpc.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 217 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xe2, 0xe2, 0x2c, 0x2a, 0x48, 0xd6,
	0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x97, 0xe2, 0x2f, 0xc9, 0xcc, 0x4d, 0x2d, 0x2e, 0x49, 0xcc, 0x2d,
	0x80, 0x08, 0x28, 0xc9, 0x73, 0x71, 0x07, 0x96, 0xa6, 0x16, 0x55, 0x06, 0x24, 0x16, 0x25, 0xe6,
	0x16, 0x0b, 0x09, 0x70, 0x31, 0x17, 0x17, 0xe6, 0x48, 0x30, 0x2a, 0x30, 0x6a, 0x70, 0x06, 0x81,
	0x98, 0x4a, 0x73, 0x19, 0xb9, 0x98, 0x83, 0xf2, 0xcb, 0x85, 0xb4, 0xb8, 0x98, 0x4a, 0x8a, 0xc1,
	0x12, 0xdc, 0x46, 0x52, 0x7a, 0xe9, 0xf9, 0xf9, 0xe9, 0x39, 0xa9, 0x10, 0x33, 0x92, 0x4a, 0xd3,
	0xf4, 0x42, 0x60, 0xc6, 0x06, 0x01, 0x55, 0x09, 0x09, 0x71, 0xb1, 0xa4, 0x64, 0xe6, 0x16, 0x4b,
	0x30, 0x29, 0x30, 0x03, 0x8d, 0x01, 0xb3, 0x85, 0xc4, 0xb8, 0xd8, 0xd2, 0x32, 0x53, 0x73, 0x52,
	0x8a, 0x25, 0x98, 0x81, 0xa2, 0x8c, 0x41, 0x50, 0x9e, 0x90, 0x0c, 0x17, 0x27, 0x50, 0xde, 0x27,
	0x31, 0x29, 0x35, 0xa7, 0x58, 0x82, 0x05, 0xac, 0x01, 0x21, 0x20, 0xa4, 0xc0, 0xc5, 0x0d, 0x56,
	0x07, 0x95, 0x67, 0x05, 0xcb, 0x23, 0x0b, 0x19, 0x69, 0x72, 0xb1, 0x85, 0x64, 0x26, 0x15, 0xbb,
	0x38, 0x09, 0xc9, 0x73, 0xb1, 0x82, 0xbd, 0x22, 0xc4, 0xa3, 0x87, 0xe4, 0x25, 0x29, 0x16, 0x3d,
	0xa0, 0xf3, 0x95, 0x18, 0x0c, 0x18, 0x93, 0xd8, 0xc0, 0xce, 0x35, 0x06, 0x04, 0x00, 0x00, 0xff,
	0xff, 0xc9, 0xe7, 0x10, 0xe9, 0x10, 0x01, 0x00, 0x00,
}
